(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{191:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return r})),t.d(n,"metadata",(function(){return c})),t.d(n,"rightToc",(function(){return p})),t.d(n,"default",(function(){return u}));var o=t(1),a=t(9),i=(t(0),t(488)),r={id:"connecting-navigation-prop",title:"Access the navigation prop from any component",sidebar_label:"Access the navigation prop from any component"},c={id:"version-5.x/connecting-navigation-prop",title:"Access the navigation prop from any component",description:"[`useNavigation`](use-navigation.md) is a hook which gives access to the `navigation` object. It's useful when you cannot pass the `navigation` prop into the component directly, or don't want to pass it in case of a deeply nested child.",source:"@site/versioned_docs/version-5.x/connecting-navigation-prop.md",permalink:"/docs/connecting-navigation-prop",editUrl:"https://github.com/react-navigation/react-navigation.github.io/edit/source/versioned_docs/version-5.x/connecting-navigation-prop.md",version:"5.x",sidebar_label:"Access the navigation prop from any component",sidebar:"version-5.x/docs",previous:{title:"Custom Android back button behavior",permalink:"/docs/custom-android-back-button-handling"},next:{title:"Navigating without the navigation prop",permalink:"/docs/navigating-without-navigation-prop"}},p=[],s={rightToc:p};function u(e){var n=e.components,t=Object(a.a)(e,["components"]);return Object(i.b)("wrapper",Object(o.a)({},s,t,{components:n,mdxType:"MDXLayout"}),Object(i.b)("p",null,Object(i.b)("a",Object(o.a)({parentName:"p"},{href:"/docs/use-navigation"}),Object(i.b)("inlineCode",{parentName:"a"},"useNavigation"))," is a hook which gives access to the ",Object(i.b)("inlineCode",{parentName:"p"},"navigation")," object. It's useful when you cannot pass the ",Object(i.b)("inlineCode",{parentName:"p"},"navigation")," prop into the component directly, or don't want to pass it in case of a deeply nested child."),Object(i.b)("p",null,"An ordinary component that is not a screen component will not receive the navigation prop automatically. For example in this ",Object(i.b)("inlineCode",{parentName:"p"},"GoToButton")," component:"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import * as React from 'react';\nimport { Button } from 'react-native';\n\nfunction GoToButton({ navigation, screenName }) {\n  return (\n    <Button\n      title={`Go to ${screenName}`}\n      onPress={() => navigation.navigate(screenName)}\n    />\n  );\n}\n")),Object(i.b)("p",null,"To resolve this exception, you could pass the ",Object(i.b)("inlineCode",{parentName:"p"},"navigation")," prop in to ",Object(i.b)("inlineCode",{parentName:"p"},"GoToButton")," when you render it from a screen, like so: ",Object(i.b)("inlineCode",{parentName:"p"},"<GoToButton navigation={props.navigation} />"),"."),Object(i.b)("p",null,"Alternatively, you can use the ",Object(i.b)("inlineCode",{parentName:"p"},"useNavigation")," to provide the ",Object(i.b)("inlineCode",{parentName:"p"},"navigation")," prop automatically (through React context, if you're curious)."),Object(i.b)("samp",{id:"navigation-in-component"},"useNavigation in component"),Object(i.b)("pre",null,Object(i.b)("code",Object(o.a)({parentName:"pre"},{className:"language-js"}),"import * as React from 'react';\nimport { Button } from 'react-native';\nimport { useNavigation } from '@react-navigation/native';\n\nfunction GoToButton({ screenName }) {\n  const navigation = useNavigation();\n\n  return (\n    <Button\n      title={`Go to ${screenName}`}\n      onPress={() => navigation.navigate(screenName)}\n    />\n  );\n}\n")),Object(i.b)("p",null,"Using this approach, you can render ",Object(i.b)("inlineCode",{parentName:"p"},"GoToButton")," anywhere in your app without passing in a ",Object(i.b)("inlineCode",{parentName:"p"},"navigation")," prop explicitly and it will work as expected."))}u.isMDXComponent=!0},488:function(e,n,t){"use strict";t.d(n,"a",(function(){return l})),t.d(n,"b",(function(){return d}));var o=t(0),a=t.n(o);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,o,a=function(e,n){if(null==e)return{};var t,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)t=i[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=a.a.createContext({}),u=function(e){var n=a.a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c({},n,{},e)),t},l=function(e){var n=u(e.components);return a.a.createElement(s.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return a.a.createElement(a.a.Fragment,{},n)}},m=Object(o.forwardRef)((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,r=e.parentName,s=p(e,["components","mdxType","originalType","parentName"]),l=u(t),m=o,d=l["".concat(r,".").concat(m)]||l[m]||b[m]||i;return t?a.a.createElement(d,c({ref:n},s,{components:t})):a.a.createElement(d,c({ref:n},s))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,r=new Array(i);r[0]=m;var c={};for(var p in n)hasOwnProperty.call(n,p)&&(c[p]=n[p]);c.originalType=e,c.mdxType="string"==typeof e?e:o,r[1]=c;for(var s=2;s<i;s++)r[s]=t[s];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,t)}m.displayName="MDXCreateElement"}}]);